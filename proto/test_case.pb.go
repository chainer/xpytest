// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xpytest/proto/test_case.proto

package xpytest_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestResult_Status int32

const (
	TestResult_UNKNOWN  TestResult_Status = 0
	TestResult_SUCCESS  TestResult_Status = 1
	TestResult_INTERNAL TestResult_Status = 2
	TestResult_FAILED   TestResult_Status = 3
	TestResult_TIMEOUT  TestResult_Status = 4
	TestResult_FLAKY    TestResult_Status = 5
)

var TestResult_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "INTERNAL",
	3: "FAILED",
	4: "TIMEOUT",
	5: "FLAKY",
}
var TestResult_Status_value = map[string]int32{
	"UNKNOWN":  0,
	"SUCCESS":  1,
	"INTERNAL": 2,
	"FAILED":   3,
	"TIMEOUT":  4,
	"FLAKY":    5,
}

func (x TestResult_Status) String() string {
	return proto.EnumName(TestResult_Status_name, int32(x))
}
func (TestResult_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_test_case_2830263af61e5ce1, []int{1, 0}
}

type TestQuery struct {
	// File path to a python test.
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// Priority.  A test with a higher priority should precede.  This should be
	// useful to avoid slow tests from wasting time because of starting late.
	Priority int32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	// Deadline in seconds.
	Deadline float32 `protobuf:"fixed32,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// # of processes in pytest-xdist.
	Xdist int32 `protobuf:"varint,4,opt,name=xdist,proto3" json:"xdist,omitempty"`
	// # of retries.
	Retry                int32    `protobuf:"varint,5,opt,name=retry,proto3" json:"retry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestQuery) Reset()         { *m = TestQuery{} }
func (m *TestQuery) String() string { return proto.CompactTextString(m) }
func (*TestQuery) ProtoMessage()    {}
func (*TestQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_case_2830263af61e5ce1, []int{0}
}
func (m *TestQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestQuery.Unmarshal(m, b)
}
func (m *TestQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestQuery.Marshal(b, m, deterministic)
}
func (dst *TestQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestQuery.Merge(dst, src)
}
func (m *TestQuery) XXX_Size() int {
	return xxx_messageInfo_TestQuery.Size(m)
}
func (m *TestQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TestQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TestQuery proto.InternalMessageInfo

func (m *TestQuery) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *TestQuery) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *TestQuery) GetDeadline() float32 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

func (m *TestQuery) GetXdist() int32 {
	if m != nil {
		return m.Xdist
	}
	return 0
}

func (m *TestQuery) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

type TestResult struct {
	Status TestResult_Status `protobuf:"varint,1,opt,name=status,proto3,enum=xpytest.proto.TestResult_Status" json:"status,omitempty"`
	// Test name (e.g., "tests/foo_tests/test_bar.py").
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Standard output.
	Stdout string `protobuf:"bytes,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Standard error.
	Stderr string `protobuf:"bytes,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Duration that the test took.
	Time                 float32  `protobuf:"fixed32,5,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_case_2830263af61e5ce1, []int{1}
}
func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (dst *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(dst, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetStatus() TestResult_Status {
	if m != nil {
		return m.Status
	}
	return TestResult_UNKNOWN
}

func (m *TestResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestResult) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *TestResult) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *TestResult) GetTime() float32 {
	if m != nil {
		return m.Time
	}
	return 0
}

type HintFile struct {
	SlowTests            []*HintFile_SlowTest `protobuf:"bytes,1,rep,name=slow_tests,json=slowTests,proto3" json:"slow_tests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HintFile) Reset()         { *m = HintFile{} }
func (m *HintFile) String() string { return proto.CompactTextString(m) }
func (*HintFile) ProtoMessage()    {}
func (*HintFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_case_2830263af61e5ce1, []int{2}
}
func (m *HintFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HintFile.Unmarshal(m, b)
}
func (m *HintFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HintFile.Marshal(b, m, deterministic)
}
func (dst *HintFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HintFile.Merge(dst, src)
}
func (m *HintFile) XXX_Size() int {
	return xxx_messageInfo_HintFile.Size(m)
}
func (m *HintFile) XXX_DiscardUnknown() {
	xxx_messageInfo_HintFile.DiscardUnknown(m)
}

var xxx_messageInfo_HintFile proto.InternalMessageInfo

func (m *HintFile) GetSlowTests() []*HintFile_SlowTest {
	if m != nil {
		return m.SlowTests
	}
	return nil
}

type HintFile_SlowTest struct {
	// File name of a slow test (e.g.,"test_foo.py", "bar/test_foo.py").  Parent
	// directories can be omitted (i.e., "test_foo.py" can matches
	// "bar/test_foo.py").
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Deadline in seconds.
	Deadline float32 `protobuf:"fixed32,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// # of processes in pytest-xdist.
	Xdist int32 `protobuf:"varint,3,opt,name=xdist,proto3" json:"xdist,omitempty"`
	// # of retries.  For flaky tests.
	Retry                int32    `protobuf:"varint,4,opt,name=retry,proto3" json:"retry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HintFile_SlowTest) Reset()         { *m = HintFile_SlowTest{} }
func (m *HintFile_SlowTest) String() string { return proto.CompactTextString(m) }
func (*HintFile_SlowTest) ProtoMessage()    {}
func (*HintFile_SlowTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_case_2830263af61e5ce1, []int{2, 0}
}
func (m *HintFile_SlowTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HintFile_SlowTest.Unmarshal(m, b)
}
func (m *HintFile_SlowTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HintFile_SlowTest.Marshal(b, m, deterministic)
}
func (dst *HintFile_SlowTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HintFile_SlowTest.Merge(dst, src)
}
func (m *HintFile_SlowTest) XXX_Size() int {
	return xxx_messageInfo_HintFile_SlowTest.Size(m)
}
func (m *HintFile_SlowTest) XXX_DiscardUnknown() {
	xxx_messageInfo_HintFile_SlowTest.DiscardUnknown(m)
}

var xxx_messageInfo_HintFile_SlowTest proto.InternalMessageInfo

func (m *HintFile_SlowTest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HintFile_SlowTest) GetDeadline() float32 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

func (m *HintFile_SlowTest) GetXdist() int32 {
	if m != nil {
		return m.Xdist
	}
	return 0
}

func (m *HintFile_SlowTest) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func init() {
	proto.RegisterType((*TestQuery)(nil), "xpytest.proto.TestQuery")
	proto.RegisterType((*TestResult)(nil), "xpytest.proto.TestResult")
	proto.RegisterType((*HintFile)(nil), "xpytest.proto.HintFile")
	proto.RegisterType((*HintFile_SlowTest)(nil), "xpytest.proto.HintFile.SlowTest")
	proto.RegisterEnum("xpytest.proto.TestResult_Status", TestResult_Status_name, TestResult_Status_value)
}

func init() {
	proto.RegisterFile("xpytest/proto/test_case.proto", fileDescriptor_test_case_2830263af61e5ce1)
}

var fileDescriptor_test_case_2830263af61e5ce1 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x4d, 0x6b, 0xdb, 0x40,
	0x14, 0xec, 0xea, 0xab, 0xd2, 0x73, 0x5b, 0xc4, 0x52, 0x8a, 0x30, 0x14, 0x84, 0x4e, 0x3a, 0xc9,
	0xd0, 0x5e, 0x7a, 0x2b, 0xc6, 0x95, 0xa9, 0xb1, 0x23, 0x93, 0x95, 0x4c, 0xc8, 0xc9, 0x28, 0xd1,
	0x1a, 0x04, 0xb2, 0x65, 0x76, 0x57, 0xd8, 0x3a, 0xe7, 0x27, 0xe5, 0xaf, 0xe5, 0x07, 0x84, 0x5d,
	0xc9, 0x8e, 0x43, 0x92, 0xdb, 0xcc, 0xec, 0xe8, 0x69, 0xde, 0x1b, 0xf8, 0x79, 0xdc, 0xb7, 0x82,
	0x72, 0x31, 0xda, 0xb3, 0x5a, 0xd4, 0x23, 0x09, 0xd7, 0xf7, 0x39, 0xa7, 0x91, 0xe2, 0xf8, 0x6b,
	0xff, 0xdc, 0xd1, 0xe0, 0x01, 0x81, 0x93, 0x51, 0x2e, 0xae, 0x1b, 0xca, 0x5a, 0x8c, 0xc1, 0xd8,
	0x94, 0x15, 0xf5, 0x90, 0x8f, 0x42, 0x87, 0x28, 0x8c, 0x87, 0x60, 0xef, 0x59, 0x59, 0xb3, 0x52,
	0xb4, 0x9e, 0xe6, 0xa3, 0xd0, 0x24, 0x67, 0x2e, 0xdf, 0x0a, 0x9a, 0x17, 0x55, 0xb9, 0xa3, 0x9e,
	0xee, 0xa3, 0x50, 0x23, 0x67, 0x8e, 0xbf, 0x83, 0x79, 0x2c, 0x4a, 0x2e, 0x3c, 0x43, 0x7d, 0xd4,
	0x11, 0xa9, 0x32, 0x2a, 0x58, 0xeb, 0x99, 0x9d, 0xaa, 0x48, 0xf0, 0x84, 0x00, 0x64, 0x0a, 0x42,
	0x79, 0x53, 0x09, 0xfc, 0x07, 0x2c, 0x2e, 0x72, 0xd1, 0x70, 0x15, 0xe4, 0xdb, 0x2f, 0x3f, 0x7a,
	0x15, 0x3a, 0x7a, 0xb1, 0x46, 0xa9, 0xf2, 0x91, 0xde, 0x2f, 0x17, 0xd8, 0xe5, 0x5b, 0xaa, 0x82,
	0x3a, 0x44, 0x61, 0xfc, 0x43, 0x4e, 0x2b, 0xea, 0x46, 0xa8, 0x88, 0x0e, 0xe9, 0x59, 0xaf, 0x53,
	0xc6, 0x54, 0xc2, 0x4e, 0xa7, 0x8c, 0xc9, 0x19, 0xa2, 0xdc, 0x52, 0x95, 0x50, 0x23, 0x0a, 0x07,
	0x19, 0x58, 0xdd, 0x9f, 0xf0, 0x00, 0x3e, 0xaf, 0x92, 0x79, 0xb2, 0xbc, 0x49, 0xdc, 0x4f, 0x92,
	0xa4, 0xab, 0xc9, 0x24, 0x4e, 0x53, 0x17, 0xe1, 0x2f, 0x60, 0xcf, 0x92, 0x2c, 0x26, 0xc9, 0x78,
	0xe1, 0x6a, 0x18, 0xc0, 0x9a, 0x8e, 0x67, 0x8b, 0xf8, 0x9f, 0xab, 0x4b, 0x5b, 0x36, 0xbb, 0x8a,
	0x97, 0xab, 0xcc, 0x35, 0xb0, 0x03, 0xe6, 0x74, 0x31, 0x9e, 0xdf, 0xba, 0x66, 0xf0, 0x88, 0xc0,
	0xfe, 0x5f, 0xee, 0xc4, 0x54, 0xde, 0xf9, 0x2f, 0x00, 0xaf, 0xea, 0xc3, 0x5a, 0xee, 0x29, 0x17,
	0xd7, 0xc3, 0xc1, 0x9b, 0xc5, 0x4f, 0xe6, 0x28, 0xad, 0xea, 0x83, 0xba, 0x82, 0xc3, 0x7b, 0xc4,
	0x87, 0x1b, 0xb0, 0x4f, 0xf2, 0xf9, 0x0e, 0xe8, 0xe2, 0x0e, 0x97, 0x65, 0x69, 0x1f, 0x95, 0xa5,
	0xbf, 0x5b, 0x96, 0x71, 0x51, 0xd6, 0x9d, 0xa5, 0xb2, 0xfc, 0x7e, 0x0e, 0x00, 0x00, 0xff, 0xff,
	0x3a, 0x65, 0x89, 0x35, 0x69, 0x02, 0x00, 0x00,
}
